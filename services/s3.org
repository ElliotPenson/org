#+TITLE: Amazon S3
#+AUTHOR: Elliot Penson

S3 (Simple Storage Service) provides secure, durable, highly-scalable /object
storage/ in the cloud. Object storage (also known as /object-based storage/)
saves flat files. S3 is not /block-based/ storage and thus doesn't allow you to
run an operating system or a database. You can have 100 buckets per account by
default.

See [[https://aws.amazon.com/s3/faqs/][the FAQ]] for more information.

* Properties

  - S3 is a universal namespace, that is, names must be unique globally.
  - S3 creates a DNS: ~https://s3-<region>.amazonaws.com/<bucket>~.
  - When you upload a file to S3 you will receive an HTTP 200 code if the upload
    was successful.

* Objects

  S3 provides simple key, value store. Files can be from 0 bytes to 5 TB. S3
  gives unlimited storage.

  Objects consist of the following:
  - Key (the object name)
  - Value (the object's data: a sequence of bytes).
  - Version ID
  - Metadata (data about the data. e.g. date)
  - Subresources
    - Access Control Lists (ACL): who can access this object - fine-grained
      permissions.
    - Torrent
  
  S3 is lexographical. Objects are stored in alphabetical order. Files that have
  a very similar name are stored in a similar location. You may want to add some
  randomness to the beginning of the file name to prevent bottlenecks.

  You can load files to S3 much faster by enabling /multipart upload/.

* Buckets

  Objects are stored in /Buckets/. A Bucket is similar to a folder.

  Buckets reside in a certain AWS region.

* Data Consistency Model

  - Read after write consistency for PUTS of new objects.
  - Eventual consistency for overwrite PUTS and DELETE (can take some time to
    propagate).

  Updates to S3 are atomic. You will either get the old file or the new
  file. You won't get partial or corrupted data.

* Tolerance

  Data is spread across multiple devices and facilities; S3 is designed to
  withstand failure.

  - Built for 99.99% availability for the S3 platform.
  - Amazon guarantee 99.99% availability.
  - Amazon guarantees 99.99999999999% durability for S3 information (remember 11
    x 9's). This is the /eleven 9s durability agreement/.

* Security

  - By default, all newly created buckets are PRIVATE.
  - You can setup access control to your buckets using;
    - Bucket Policies
      - Bucket-wide permissions.
    - Access Control Lists (ACL)
      - Can drill down to individual objects.
  - S3 buckets can be configured to create access logs which log all requests
    made to the S3 bucket. This logs can be setup to be saved to another
    bucket. Of course, logging is important for security.

* Encryption
  
  - In Transit;
    - SSL/TLS (saying that you have to use HTTPS).
  - At Rest;
    - Server Side Encryption
      1. S3 Managed Keys (*SSE-S3*)
         - Most common method. Uses AES-256.
      2. AWS Key Management Service, Managed Keys (*SSE-KMS*)
         - More expensive method. Provides an extra layer of protection using an
           envelope key (which has separate permissions). This key protects your
           encryption key. In addition, SSE-KMS provides an audit trail of when
           keys were used and by whom. Lastly, you can also manage your keys
           yourself.
      3. Customer Provided Keys (*SSE-C*)
         - You manage the keys but Amazon manages the encryption.
    - Client Side Encryption
      - Encrypt on your computer and then upload.

* Storage Tiers/Classes

  - *S3* - (durable, immediately available, frequently accessed). 99.99%
    availability, 99.99999999999% durability, stored redundantly across multiple
    devices in multiple facilities and is designed to sustain the loss of 2
    facilities concurrently.
  - *S3 - IA* (Infrequently Accessed) - (durable immediately available,
    infrequently accessed). For data that is accessed less frequently, but
    requires rapid access when needed. Lower fee than S3, but you are charged a
    retrieval fee.
  - *RRS* (Reduced Redundancy Storage) - (data that is easily reproducible, such
    as thumnails etc). Designed to provide 99.99% durability and 99.99%
    availability of objects over a given year. We can only lose 1 facility.
  - *Glacier* - Very cheap, but used for archival only. It takes 3-5 hours to
    restore from Glacier.

  Reduced Redundancy Storage is usually used for data that is reproducible, such
  as thumbnails.

  Glacier is an extremely low-cost storage service for data archival. Amazon
  Glacier stores data for as little as $0.01 per gigabyte per month, and is
  optimized for data that is infrequently accessed and for which retrieval times
  of 3 to 5 hours are suitable. Glacier is an independent service but it tightly
  integrated with S3. First byte latency is minutes or hours instead of
  milliseconds like S3 services.

  |                                     |             S3 |         S3-IA |          RRS | Glacier          |
  |-------------------------------------+----------------+---------------+--------------+------------------|
  | Availability                        |         99.99% |         99.9% |       99.99% | N/A              |
  | Durability                          | 99.9999999999% | 99.999999999% |       99.99% | 99.999999999%    |
  | Concurrent facility fault tolerance |              2 |             2 |            1 | 2                |
  | First byte latency                  |   Milliseconds |  Milliseconds | Milliseconds | Minutes or hours |

* Charges

  In S3, costs can come from
  - Storage
  - Requests
  - Storage Management Pricing (cost tracking)
  - Data Transfer Pricing (moving data around within S3)
  - Transfer Acceleration

* Transfer Acceleration

  Amazon S3 Transfer Acceleration enables fast, easy, and secure transfers of
  files over long distances between your end users and an S3 bucket. Transfer
  Acceleration takes advantage of Amazon CloudFront's globally distributes edge
  locations. As the data arrives at an edge location, data is routed to Amazon
  S3 over an optimized network path.

  A distinct URL is used for transfer acceleration:
  ~<bucket>.s3-accelerate.amazonaws.com~.

  You can enable Transfer Acceleration by clicking on a bucket and selecting
  /Properties/ -> /Transfer acceleration/.

* Tags

  You can tag buckets and objects. Individual objects don't inherit the tag from
  the bucket.

* Versioning

  "Versioning is a means of keeping multiple variants of an object in the same
  bucket"
  (https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). It's a
  great backup tool.

  Every time a file changes there will be a copy of both the original and the
  change. Of course, versioning can increase S3 costs. Even deleting is a
  version (a /delete marker/ is made)!

  Once enabled, versioning cannot be disabled. Versioning can only be
  /suspended/ after turned on.

  Versioning integrates with lifecycle rules.

  /MFA Delete/ helps stop people from accidentally deleting a version. This
  multi-factor authentication provides an extra layer of security.

* Cross Region Replication

  Cross-region replication enables automatic and asynchronous copying of objects
  across buckets in different AWS regions. Enable in the S3 console by clicking
  on a bucket then /Management/ then /Replication/. Note that cross-region
  replication requires versioning enabled on both the source and destination
  buckets. Regions must be unique.
  
  Note that only new objects will be replicated. Files in an existing bucket are
  not replicated automatically.

  Currently, cross region replication cannot replicate to multiple buckets or
  use daisy chaining.

  Version deletes are not replicated.

* Lifecycle Management

  Click a Bucket then select /Management/->/Lifecycle/. Here you can define
  lifecycle rules to automatically manage S3 objects. The following actions can
  be done:
  
  - Transition to Standard - Infrequent Access Storage Class (after a minimum of
    30 days. Data must also be at least 128KB).
  - Archive to the Glacier Storage Class (after any number of days or a minimum
    of 30 days after transition to Standard-IA).
  - Permanently delete.

  Lifecycle management can be used in conjunction with vertioning. It can be
  applied to current versions and previous versions. Can also be used without
  versioning.

* Static Website Hosting

  S3 allows static website hosting. These websites may contain client-side
  scripts. Dynamic, service-side processing is not supported.

  The URL for static website hosting looks like:
  ~<bucket>.s3-website-<region>.amazonaws.com~. For example
  http://elliotp.s3-website-us-east-1.amazonaws.com.

  S3 static website hosting scales automatically and is very cheap.

* Command Line Tools

  The AWS CLI can be used to access S3.

  - List buckets:
    - ~aws s3 ls~
  - Create a bucket:
    - ~aws s3 mb s3://<bucket>~
  - Copy to an object to a bucket.
    - ~aws s3 cp <file> s3://<bucket>~
  - Copy a folder to a bucket.
    - ~aws s3 cp --recursive <folder> s3://<bucket>~
