#+TITLE: Emacs
#+AUTHOR: Elliot Penson

* Global Commands

  Note that C- and M- mean Control- and Meta- respectively. To quit a partially
  entered command, type C-g. To open the emacs tutorial, type C-g t.

** Navigation

   | Command       | Description                                 |
   |---------------+---------------------------------------------|
   | C-b/C-f       | Cursor backward/forward                     |
   | C-a/C-e       | Line beginning/end                          |
   | C-p/C-n       | Line previous/next                          |
   | C-v/M-v       | Next/previous screen                        |
   | C-l           | Center on cursor                            |
   | C-s/C-r       | Search forward/backward                     |
   | M-b/M-f       | Word backward/forward                       |
   | M-a/M-e       | Sentence beginning/end                      |
   | M-</M->       | Document beginning/end                      |
   | M-g M-g       | Go to line                                  |
   | C-u C-<space> | Pop the mark (go back to previous location) |

** Editing

   | Command                | Description                              |
   |------------------------+------------------------------------------|
   | C-j                    | New line and indent                      |
   | C-d                    | Delete next character                    |
   | C-<delete>             | Delete previous word                     |
   | C-k                    | Kill to end of line                      |
   | C-y                    | Yank (paste)                             |
   | C-/                    | Undo                                     |
   | C-<space>              | Set mark at cursor                       |
   | C-g                    | Deactivate mark                          |
   | C-w                    | Kill region                              |
   | M-w                    | Copy region                              |
   | C-x h                  | Mark whole buffer                        |
   | C-x C-=/-              | Increase/decrease buffer text size       |
   | M-^                    | Join lines                               |
   | M-l                    | Convert following word to lower case     |
   | M-u                    | Convert following word to upper case     |
   | M-c                    | Capitalize the following word            |
   | C-x C-l                | Convert region to lower case             |
   | C-x C-u                | Convert region to upper case             |
   | M-;                    | Comment out region                       |
   | M-x whitespace-cleanup | Automatically remove trailing whitespace |

** Buffers/Files/Windows

   | Command | Description            |
   |---------+------------------------|
   | C-x C-f | Open file              |
   | C-x C-s | Save file              |
   | C-x C-c | Close Emacs            |
   | C-x C-b | Buffer list            |
   | C-x b   | Buffer switch to       |
   | C-x k   | Kill buffer            |
   | C-x o   | Move to other window   |
   | C-x 0   | Delete selected window |
   | C-x 1   | Delete other windows   |
   | C-x 2   | Split horizontally     |
   | C-x 3   | Split vertically       |
   | C-M-v   | Scroll other window    |

** Keyboard Macros

   | Command | Description                   |
   |---------+-------------------------------|
   | C-x (   | Start defining keyboard macro |
   | C-x )   | Stop defining keyboard macro  |
   | C-x e   | Execute keyboard macro        |

** Extensions

   | Command           | Description             |
   |-------------------+-------------------------|
   | M-x list-packages | Show available packages |

* Packages

** Avy

   | Command    | Description                           |
   |------------+---------------------------------------|
   | C-' <char> | Input a character and jump to it      |
   | C-: <char> | Input two characters and jump to them |

** Interactively Do Things

   Interactively Do Things (Ido) is shipped with emacs but not enabled by
   default. It provides instant feedback for many operations (like buffer
   switching and file navigation).

   | Command | Description    |
   |---------+----------------|
   | C-f     | Disable ido    |
   | C-s     | Next match     |
   | C-r     | Previous match |

** Org mode

   Headings: * for h1, ** for h2, etc.
   Formatting: *bold*, /italics/

   | Command            | Description                    |
   |--------------------+--------------------------------|
   | <tab> (on heading) | Expand/collapse section        |
   | C-<enter>          | New heading of same level      |
   | C-c C-n/p          | Next/previous heading          |
   | C-c <bar>          | Create a new table             |
   | <tab> (in table)   | Move to next cell in table     |
   | "<s" <tab>         | New code snippet               |
   | C-c '              | Edit snippet in native mode    |
   | C-c C-e            | Dispatch for export            |
   | M-<enter>          | New list item at current level |

*** Clocking

    | Command     | Description                                                        |
    |-------------+--------------------------------------------------------------------|
    | C-c C-x C-i | Start clock on current item                                        |
    | C-c C-x C-o | Stop clock on current item                                         |
    | C-c C-c     | Recompute the time interval (afer changing one of the time stamps) |
    | C-c C-x C-q | Cancel current clock                                               |
    | C-c C-x C-r | Generate dynamic block containing a clock report                   |
    | C-C C-c     | Update dynamic block at point                                      |

** Paredit

   | Command | Description                            |
   |---------+----------------------------------------|
   | M-(     | Wrap parens around an sexp             |
   | M-"     | Wrap quotes around an sexp             |
   | C-)     | "Slurp" forward. Pull in sexp on right |
   | C-(     | "Slurp" backward. Pull in sexp on left |
   | C-}     | "Barf" forward. Push out last sexp     |
   | C-{     | "Barf" backward. Push out first sexp   |

** Slime

   Run slime with M-x slime. See [[http://pchristensen.com/wp-content/uploads/2008/02/slimecommands.pdf][Peter Christensen's cheat sheet]] for
   more commands.

*** Compilation/Evaluation

    | Command | Description                  |
    |---------+------------------------------|
    | C-c C-k | Compile and load entire file |
    | C-c C-c | Compile the toplevel form    |
    | C-x C-e | Evaluate last expression     |
    | C-c M-c | Remove all compilation notes |

*** REPL

    | Command | Description                     |
    |---------+---------------------------------|
    | C-c M-p | Set current REPL package        |
    | M-p/M-n | REPL: Go to previous/next input |
    | C-c C-c | REPL: Interrupt                 |
    | TAB     | REPL: Complete symbol at point  |

*** Editing

    | Command   | Description                               |
    |-----------+-------------------------------------------|
    | C-c C-d h | Hyperspec lookup                          |
    | C-c C-w c | Show function callers                     |
    | C-c <     | List callers of a function                |
    | C-c >     | List callees of a function                |
    | M-.       | Go to definition                          |
    | M-,       | Return from definition to examined symbol |
    | M-TAB     | Complete symbol                           |
    | C-c M-i   | Fuzzy complete                            |
    | C-c C-s   | Insert arglist                            |

** YASnippet

   Templating system for Emacs. Type a /trigger key/ then hit TAB to expand a
   snippet. By default, snippets are stored in ~.emacs.d/snippets~

   | Command             | Description          |
   |---------------------+----------------------|
   | M-x yas-new-snippet | Create a new snippet |

   See [[http://joaotavora.github.io/yasnippet/snippet-development.html][the documentation]] for instructions on creating snippets.

* Configuration

  My Emacs configuration can be found on [[https://github.com/ElliotPenson/.emacs.d][GitHub]].
