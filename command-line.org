#+TITLE: Command Line
#+AUTHOR: Elliot Penson

* Core Commands

** ~ls~  

   - *Description*: display contents of working directory
   - *Form*: ~ls [options]~
   - *Options*:
     - ~-l~
       - /List/ contents with extra information
     - ~-a~
       - Show /all/ files/folders (even hidden ones)

** ~pwd~

   - *Description*: show the working directory path
   - *Form*: ~pwd~

** ~cd~

   - *Description*: change the working directory
   - *Forms*:
     - ~cd~: move to the home directory
     - ~cd ..~: move up the directory tree
     - ~cd -~: move to the previous working directory
     - ~cd [path]~: move to a specific location
   - *Example*: ~cd ~/.emacs.d/~

** ~mkdir~

   - *Description*: create a directory
   - *Form*: ~mkdir <name>~

** ~cp~

   - *Description*: copy a file
   - *Form*: ~cp <file> <file>~
   - *Example*: ~cd file.lisp folder/file.lisp~

** ~mv~

   - *Description*: move/rename a file
   - *Form*: ~mv <file> <file>~
   - *Examples*:
     - ~mv file.lisp folder/file.lisp~
     - ~mv file.lisp new-name.lisp~

** ~rm~

   - *Description*: delete a file/folder
   - *Form*: ~rm <file>~
   - *Options*:
     - ~-r~
       - /Recursively/ delete a directory
   - *Examples*:
     - ~rm file.lisp~
     - ~rm -r some/folder~

** ~less~

   - *Description*: view the contents of a file. ~less~ has a cousin
     called ~more~.
   - *Form*: ~less <file>~
   - *Usage*:
     - Type ~q~ to quit, ~/~ to search, and ~h~ for help

** ~cat~

   - *Description*: print the entire contents of a file
   - *Forms*
     - ~cat <file>~
     - ~cat <file1> <file2> ...~

** ~echo~

   - *Description*: convert standard input to standard output
   - *Form*: ~echo <string>~
   - *Example*: ~echo "some text"~

** ~man~

   - *Description*: open a command's manual
   - *Form*: ~man <command>~

* Network Commands

** ~ssh~

   - *Description*: Secure SHell enables remote machine login. The
     command provides secure, encrypted communication.
   - *Form*: ~ssh user@host~
   - *Example*: ~ssh john.cabmin@csgatewheaton.edu~

** ~scp~

   - *Description*: Secure CoPy allows files/folders to be moved to,
     from, or between different hosts. It uses ~ssh~ for data transfer
     and provides the same authentication and security.
   - *Form*: ~scp [remove/local file/directory] [remove/local
     file/directory]~
   - *Options*
     - ~-r~
       - /Recursively/ move a directory
   - *Example*:  ~scp -r
     john.cabmin@csgate.wheaton.edu:/homes/john.cabmin/folder/ .~

* Symbolic Links

  Unix filesystems make use of aliases for files known as symbolic
  links (symlinks). A symbolic links are treaded in a similar fashion
  to the actual file. The ~ln~ command can be used to create
  symlinks. The ~ls -l~ will reveal where a symlink points. For
  example:

  #+BEGIN_SRC sh
    $ ls
    bar foo
    $ ln -s bar baz
    $ ls -l
    total 8
    -rw-r--r-- 1 elliot staff 0 Jan 8 09:50 bar
    lrwxr-xr-x 1 elliot staff 3 Jan 8 09:58 baz -> bar
    -rw-r--r-- 1 elliot staff 0 Jan 8 09:57 foo
  #+END_SRC

** ~ln~

   - *Description*: create a link
   - *Form*: ~ln <file> <alias-file>~
   - *Options*:
     - ~-s~
       - Make a symbolic link

* Searching

** ~grep~

  Information in this section is taken from
  http://www.uccs.edu/~ahitchco/grep/.

  - *Description*: Global Regular Expression Print. Searches input
    files for a search string and prints matching lines.
  - *Form*: ~grep [options] <regex> <filename(s)>~
  - *Options*:
    - ~-n~
      - Explains which lines match the search string
    - ~-v~
      - Prints the negative result (all non-matching lines)
    - ~-c~
      - Suppresses the line printing, displays the number of matching
        lines
    - ~-l~
      - Only prints the filenames with matching lines
    - ~-i~
      - Ignore case
    - ~-x~
      - Search for eXact matches only
    - ~-f~
      - Allows specification of a file containing the search string
    - ~-r~
      - Directory search. /grep -r "test" ./ searches files in the
        current directory

*** Sibling Commands
   
    The egrep command stands for "extended grep" and supports certain
    useful sequences such as the + and ? operators. It's equivalent to
    grep -E. The fgrep command gives a performance boost as it doesn't
    interpret regular expressions. It's equivalent to grep -F.

* Pipes and Redirects

** Pipe operator

   The pipe operator ~|~ passes the output from one command to
   another. For example: ~ls | grep ".org"~ will display all org-mode
   files in the current directory.

** Redirects

   The less-than ~>~ symbol is used to redirect the output from a
   command to a file. The greater-than ~<~ symbol causes a command to
   read its input from a file.

* Documentation

** Usage Statement (Loose) Guidelines

   Anything in angle brackets (<>) means the argument is required
   (e.g. <foo>). Anothing in square brackets ([]) means the argument
   is optional (e.g. [bar]). Options separated by the pipe (|) are
   choices (e.g. --baz=one|two|three). Note that this mirrors the /or/
   operator. Single-letter options start with one dash
   (e.g. -a). Multi-letter options start with two dashes
   (e.g. --foo-bar).

* Utilities

  - Irssi for IRC
    - See http://www.reyhan.org/2012/12/how-to-irssi.html
